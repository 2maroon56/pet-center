{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport { getDatabase, ref, set, get } from \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8Sxq0eIYJIivxuExmLmoYViXpl3-bLXQ\",\n  authDomain: \"veterinaryclinic-422805.firebaseapp.com\",\n  projectId: \"veterinaryclinic-422805\",\n  storageBucket: \"veterinaryclinic-422805.appspot.com\",\n  messagingSenderId: \"385189370632\",\n  appId: \"1:385189370632:web:9dc871608f26d8a2f02abd\",\n  measurementId: \"G-B42DEKS32T\",\n  databaseURL: \"https://veterinaryclinic-422805-default-rtdb.firebaseio.com/\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\nconst database = getDatabase(app);\nfunction addDataBase(userId, email, name) {\n  const db = getDatabase();\n  set(ref(db, 'users/' + userId).push().set({\n    username: name,\n    email: email\n  }), function (error) {\n    if (error) {\n      alert('Lỗi');\n    } else {\n      alert('Thành Công !!!');\n    }\n  });\n}\nexport { auth, provider, firebaseConfig, app, database, addDataBase };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","getDatabase","ref","set","get","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","app","auth","provider","database","addDataBase","userId","email","name","db","push","username","error","alert"],"sources":["D:/workspace/reactjs2/tiktok/src/Components/firebase/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {getAuth, GoogleAuthProvider} from \"firebase/auth\"\r\nimport { getDatabase, ref, set, get } from \"firebase/database\";\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC8Sxq0eIYJIivxuExmLmoYViXpl3-bLXQ\",\r\n  authDomain: \"veterinaryclinic-422805.firebaseapp.com\",\r\n  projectId: \"veterinaryclinic-422805\",\r\n  storageBucket: \"veterinaryclinic-422805.appspot.com\",\r\n  messagingSenderId: \"385189370632\",\r\n  appId: \"1:385189370632:web:9dc871608f26d8a2f02abd\",\r\n  measurementId: \"G-B42DEKS32T\",\r\n  databaseURL: \"https://veterinaryclinic-422805-default-rtdb.firebaseio.com/\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst auth = getAuth(app);\r\nconst provider = new GoogleAuthProvider();\r\nconst database = getDatabase(app);\r\n\r\nfunction addDataBase(userId, email, name) {\r\n  const db = getDatabase();\r\n  set(ref(db, 'users/' + userId).push().set({\r\n    username: name,\r\n    email: email,\r\n  }), function (error) {\r\n    if (error) {\r\n      alert('Lỗi')\r\n    } else {\r\n      alert('Thành Công !!!')\r\n    }\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport {auth, provider, firebaseConfig, app, database, addDataBase};\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAAQC,OAAO,EAAEC,kBAAkB,QAAO,eAAe;AACzD,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;;AAG9D;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,yCAAyC;EACrDC,SAAS,EAAE,yBAAyB;EACpCC,aAAa,EAAE,qCAAqC;EACpDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE,cAAc;EAC7BC,WAAW,EAAE;AACf,CAAC;;AAGD;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACO,cAAc,CAAC;AAEzC,MAAMU,IAAI,GAAGhB,OAAO,CAACe,GAAG,CAAC;AACzB,MAAME,QAAQ,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;AACzC,MAAMiB,QAAQ,GAAGhB,WAAW,CAACa,GAAG,CAAC;AAEjC,SAASI,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAE;EACxC,MAAMC,EAAE,GAAGrB,WAAW,CAAC,CAAC;EACxBE,GAAG,CAACD,GAAG,CAACoB,EAAE,EAAE,QAAQ,GAAGH,MAAM,CAAC,CAACI,IAAI,CAAC,CAAC,CAACpB,GAAG,CAAC;IACxCqB,QAAQ,EAAEH,IAAI;IACdD,KAAK,EAAEA;EACT,CAAC,CAAC,EAAE,UAAUK,KAAK,EAAE;IACnB,IAAIA,KAAK,EAAE;MACTC,KAAK,CAAC,KAAK,CAAC;IACd,CAAC,MAAM;MACLA,KAAK,CAAC,gBAAgB,CAAC;IACzB;EACF,CAAC,CAAC;AAEJ;AAKA,SAAQX,IAAI,EAAEC,QAAQ,EAAEX,cAAc,EAAES,GAAG,EAAEG,QAAQ,EAAEC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}