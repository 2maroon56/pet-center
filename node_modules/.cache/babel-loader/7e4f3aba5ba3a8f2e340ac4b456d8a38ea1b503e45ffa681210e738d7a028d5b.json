{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\reactjs2\\\\tiktok\\\\src\\\\view\\\\account\\\\Update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../Components/firebase/firebase\"; // Assuming you have a firebase config file\nimport { useNavigate } from \"react-router-dom\";\nimport { updateProfile } from \"firebase/auth\"; // Assuming you have imported auth\nimport { getDatabase, ref, onValue, update } from \"firebase/database\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Update() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const user = auth.currentUser;\n  console.log(user);\n  useEffect(() => {\n    if (user) {\n      setUserId(user.uid);\n      setEmail(localStorage.getItem('email') || '');\n      setUsername(localStorage.getItem('username') || '');\n      setPhone('');\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      const db = getDatabase();\n      const userRef = ref(db, \"users/\" + userId);\n      onValue(userRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          setEmail(data.email);\n          setUsername(data.username);\n        }\n        setLoading(false);\n      });\n    }\n  }, [userId]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true); // Set loading to true when starting the update\n    const updates = {};\n    if (email) {\n      updates.email = email;\n      localStorage.setItem('email', email);\n    }\n    if (username) {\n      updates.username = username;\n      localStorage.setItem('username', username);\n    }\n    if (phone) {\n      updates.phone = phone;\n    }\n    if (Object.keys(updates).length > 0) {\n      // Check if any updates are needed\n      const user = auth.currentUser;\n      if (user) {\n        try {\n          // Update displayName in Firebase\n          await updateProfile(user, {\n            displayName: username\n          });\n\n          // Update user data in your database\n          await update(ref(getDatabase(), \"users/\" + userId), updates);\n          toast.success(\"Cập nhật thành công !!!\");\n        } catch (error) {\n          alert(\"Lỗi\");\n        }\n      }\n    } else {\n      alert(\"No changes to update\");\n    }\n    setLoading(false); // Set loading to false if there are no changes to update\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        autoComplete: \"off\",\n        required: true,\n        value: user ? user.email : '',\n        placeholder: \"Input your email\",\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\",\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"username\",\n        autoComplete: \"off\",\n        required: true,\n        value: user ? user.phone : '',\n        placeholder: \"Input your phone\",\n        onChange: e => {\n          setUsername(e.target.value);\n        },\n        className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"username\",\n        autoComplete: \"off\",\n        required: true,\n        value: user ? user.displayName : '',\n        placeholder: \"Input your username\",\n        onChange: e => {\n          setUsername(e.target.value);\n        },\n        className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Update, \"kWin2F2ld6HqUrAqnTey1zwwnIc=\", false, function () {\n  return [useNavigate];\n});\n_c = Update;\nexport default Update;\nvar _c;\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","useEffect","auth","useNavigate","updateProfile","getDatabase","ref","onValue","update","ToastContainer","toast","jsxDEV","_jsxDEV","Update","_s","email","setEmail","username","setUsername","phone","setPhone","userId","setUserId","loading","setLoading","navigate","user","currentUser","console","log","uid","localStorage","getItem","db","userRef","snapshot","data","val","handleSubmit","event","preventDefault","updates","setItem","Object","keys","length","displayName","success","error","alert","className","id","children","onSubmit","type","autoComplete","required","value","placeholder","onChange","e","target","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/workspace/reactjs2/tiktok/src/view/account/Update.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth } from \"../../Components/firebase/firebase\"; // Assuming you have a firebase config file\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {updateProfile  } from \"firebase/auth\"; // Assuming you have imported auth\r\nimport { getDatabase, ref, onValue, update } from \"firebase/database\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nfunction Update() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const user = auth.currentUser;\r\nconsole.log(user)\r\n  useEffect(() => {\r\n  \r\n    if (user) {\r\n      setUserId(user.uid);\r\n      setEmail(localStorage.getItem('email') || '');\r\n      setUsername(localStorage.getItem('username') || '');\r\n      setPhone('');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      const db = getDatabase();\r\n      const userRef = ref(db, \"users/\" + userId);\r\n\r\n      onValue(userRef, (snapshot) => {\r\n        const data = snapshot.val();\r\n        if (data) {\r\n          setEmail(data.email);\r\n          setUsername(data.username);\r\n        }\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [userId]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true); // Set loading to true when starting the update\r\n    const updates = {};\r\n    if (email) {\r\n        updates.email = email;\r\n        localStorage.setItem('email', email);\r\n      }\r\n      if (username) {\r\n        updates.username = username;\r\n        localStorage.setItem('username', username);\r\n      }\r\n      if (phone) {\r\n        updates.phone = phone;\r\n      }\r\n  \r\n    if (Object.keys(updates).length > 0) {\r\n      // Check if any updates are needed\r\n      const user = auth.currentUser;\r\n      if (user) {\r\n        try {\r\n          // Update displayName in Firebase\r\n          await updateProfile(user, {\r\n            displayName: username,\r\n          });\r\n  \r\n          // Update user data in your database\r\n          await update(ref(getDatabase(), \"users/\" + userId), updates);\r\n          toast.success(\"Cập nhật thành công !!!\");\r\n        } catch (error) {\r\n          alert(\"Lỗi\");\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"No changes to update\");\r\n    }\r\n    setLoading(false); // Set loading to false if there are no changes to update\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\" id=\"container\">\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        id=\"email\"\r\n        type=\"email\"\r\n        autoComplete=\"off\"\r\n        required\r\n        value={user ? user.email : ''}\r\n        placeholder=\"Input your email\"\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n        disabled\r\n      />\r\n      <input\r\n        id=\"username\"\r\n        type=\"username\"\r\n        autoComplete=\"off\"\r\n        required\r\n        value={user ? user.phone : ''}\r\n        placeholder=\"Input your phone\"\r\n        onChange={(e) => {\r\n          setUsername(e.target.value);\r\n        }}\r\n        className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n      />\r\n            <input\r\n        id=\"username\"\r\n        type=\"username\"\r\n        autoComplete=\"off\"\r\n        required\r\n        value={user ? user.displayName : ''}\r\n        placeholder=\"Input your username\"\r\n        onChange={(e) => {\r\n          setUsername(e.target.value);\r\n        }}\r\n        className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n      />\r\n      <button>Update</button>\r\n    </form>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Update;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}