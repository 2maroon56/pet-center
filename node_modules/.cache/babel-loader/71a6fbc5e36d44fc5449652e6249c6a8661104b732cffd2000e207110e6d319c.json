{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\reactjs2\\\\tiktok\\\\src\\\\view\\\\account\\\\Update.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth } from \"../../Components/firebase/firebase\"; // Assuming you have a firebase config file\nimport { useNavigate } from \"react-router-dom\";\nimport { getAuth, currentUser } from \"firebase/auth\"; // Assuming you have imported auth\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateUser({\n  user\n}) {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    email: '',\n    name: ''\n    // Thêm các trường khác mà bạn muốn người dùng cập nhật\n  });\n  const [isLoading, setIsLoading] = useState(false); // For loading state\n  const [error, setError] = useState(null); // For error messages\n\n  useEffect(() => {\n    // Giả sử bạn có một hàm getUserInfo() để lấy thông tin người dùng hiện tại\n    const userInfo = getUserInfo(user); // Pass user to getUserInfo\n    setUserInfo(userInfo);\n  }, [user]); // Rerun effect when user changes\n\n  const handleChange = event => {\n    setUserInfo({\n      ...userInfo,\n      [event.target.name]: event.target.value\n    });\n  };\n  function getUserInfo() {\n    const user = auth.currentUser;\n    if (user) {\n      // User is signed in, return their info\n      return {\n        displayName: user.displayName,\n        email: user.email\n        // Add any other info you want to retrieve\n      };\n    } else {\n      // No user is signed in\n      return null;\n    }\n  }\n  const updateUserInfo = async updatedInfo => {\n    const user = auth.currentUser;\n    if (user) {\n      try {\n        // Cập nhật thông tin hiển thị của người dùng\n        await user.updateProfile({\n          displayName: updatedInfo.displayName\n          // Thêm các trường thông tin khác bạn muốn cập nhật\n        });\n\n        // Cập nhật email nếu có thay đổi\n        if (updatedInfo.email !== user.email) {\n          await user.updateEmail(updatedInfo.email);\n        }\n\n        // Cập nhật mật khẩu nếu có thay đổi\n        if (updatedInfo.password) {\n          await user.updatePassword(updatedInfo.password);\n        }\n\n        // Thực hiện thêm các cập nhật khác nếu cần\n        // ...\n\n        console.log(\"Thông tin người dùng đã được cập nhật thành công.\");\n      } catch (error) {\n        console.error(\"Có lỗi xảy ra khi cập nhật thông tin người dùng:\", error);\n      }\n    } else {\n      console.error(\"Không có người dùng nào đăng nhập.\");\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    setError(null); // Clear previous errors\n\n    try {\n      // Giả sử bạn có một hàm updateUserInfo() để cập nhật thông tin người dùng\n      await updateUserInfo(userInfo);\n      alert('User information updated successfully!'); // Consider using a success toast\n      // Redirect to profile page or another relevant location\n    } catch (error) {\n      setError(error.message); // Display error message\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: userInfo.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: userInfo.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      disabled: true,\n      children: \"Updating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateUser, \"8khsDUE0BcH3w4CmXphNcSunf7w=\");\n_c = UpdateUser;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useState","useEffect","auth","useNavigate","getAuth","currentUser","jsxDEV","_jsxDEV","UpdateUser","user","_s","userInfo","setUserInfo","email","name","isLoading","setIsLoading","error","setError","getUserInfo","handleChange","event","target","value","displayName","updateUserInfo","updatedInfo","updateProfile","updateEmail","password","updatePassword","console","log","handleSubmit","preventDefault","alert","message","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","_c","$RefreshReg$"],"sources":["D:/workspace/reactjs2/tiktok/src/view/account/Update.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { auth } from \"../../Components/firebase/firebase\"; // Assuming you have a firebase config file\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getAuth, currentUser } from \"firebase/auth\"; // Assuming you have imported auth\r\n\r\nfunction UpdateUser({ user }) {\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: '',\r\n    name: '',\r\n    // Thêm các trường khác mà bạn muốn người dùng cập nhật\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false); // For loading state\r\n  const [error, setError] = useState(null); // For error messages\r\n\r\n  useEffect(() => {\r\n    // Giả sử bạn có một hàm getUserInfo() để lấy thông tin người dùng hiện tại\r\n    const userInfo = getUserInfo(user); // Pass user to getUserInfo\r\n    setUserInfo(userInfo);\r\n  }, [user]); // Rerun effect when user changes\r\n\r\n  const handleChange = (event) => {\r\n    setUserInfo({\r\n      ...userInfo,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  function getUserInfo() {\r\n    const user = auth.currentUser;\r\n\r\n    if (user) {\r\n        // User is signed in, return their info\r\n        return {\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            // Add any other info you want to retrieve\r\n        };\r\n    } else {\r\n        // No user is signed in\r\n        return null;\r\n    }\r\n}\r\n\r\nconst updateUserInfo = async (updatedInfo) => {\r\n    const user = auth.currentUser;\r\n  \r\n    if (user) {\r\n      try {\r\n        // Cập nhật thông tin hiển thị của người dùng\r\n        await user.updateProfile({\r\n          displayName: updatedInfo.displayName,\r\n          // Thêm các trường thông tin khác bạn muốn cập nhật\r\n        });\r\n  \r\n        // Cập nhật email nếu có thay đổi\r\n        if (updatedInfo.email !== user.email) {\r\n          await user.updateEmail(updatedInfo.email);\r\n        }\r\n  \r\n        // Cập nhật mật khẩu nếu có thay đổi\r\n        if (updatedInfo.password) {\r\n          await user.updatePassword(updatedInfo.password);\r\n        }\r\n  \r\n        // Thực hiện thêm các cập nhật khác nếu cần\r\n        // ...\r\n  \r\n        console.log(\"Thông tin người dùng đã được cập nhật thành công.\");\r\n      } catch (error) {\r\n        console.error(\"Có lỗi xảy ra khi cập nhật thông tin người dùng:\", error);\r\n      }\r\n    } else {\r\n      console.error(\"Không có người dùng nào đăng nhập.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    setError(null); // Clear previous errors\r\n\r\n    try {\r\n      // Giả sử bạn có một hàm updateUserInfo() để cập nhật thông tin người dùng\r\n      await updateUserInfo(userInfo);\r\n      alert('User information updated successfully!'); // Consider using a success toast\r\n      // Redirect to profile page or another relevant location\r\n    } catch (error) {\r\n      setError(error.message); // Display error message\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <label>\r\n        Email:\r\n        <input type=\"email\" name=\"email\" value={userInfo.email} onChange={handleChange} />\r\n      </label>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" name=\"name\" value={userInfo.name} onChange={handleChange} />\r\n      </label>\r\n      {/* Thêm các input khác mà bạn muốn người dùng cập nhật */}\r\n      {isLoading ? (\r\n        <button type=\"button\" disabled>Updating...</button>\r\n      ) : (\r\n        <button type=\"submit\">Update</button>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UpdateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}