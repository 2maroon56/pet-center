{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\pet center\\\\src\\\\Components\\\\googleSignIn\\\\signIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { auth, provider } from \"../firebase/firebase\"; // Assuming config file with Firebase settings\nimport { doCreateUserWithEmailAndPassword } from \"../firebase/auth\";\nimport { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\nimport Home from \"./Home\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchSignInMethodsForEmail, updateProfile } from \"firebase/auth\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getDatabase, ref, set, onValue } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignIn() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(null); // Track logged-in user email\n  const [error, setError] = useState(null); // Store error messages\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\n  const [isRegistering, setIsRegistering] = useState(false);\n  const navigate = useNavigate();\n  function addDataBase(userId, email, name, role) {\n    const db = getDatabase();\n    set(ref(db, 'users/' + userId), {\n      email: email,\n      username: name,\n      role: role\n    }, function (error) {\n      if (error) {\n        alert('Lỗi');\n      } else {\n        alert('Thành Công !!!');\n      }\n    });\n  }\n  const handleGoogleLogin = async () => {\n    try {\n      const data = await signInWithPopup(auth, provider); // Replace 'provider' with your Google Sign-in provider\n      const userEmail = data.user.email;\n      const userName = data.user.displayName;\n      const userId = data.user.uid;\n      setUsername(userName);\n      setUserEmail(userEmail);\n      localStorage.setItem(\"email\", userEmail); // Consider secure storage in production\n\n      const db = getDatabase();\n      const userRef = ref(db, 'users/' + userId);\n      let userRole = 'user';\n\n      // Wait for data from Firebase\n      await new Promise(resolve => {\n        onValue(userRef, snapshot => {\n          const userData = snapshot.val();\n          if (userData && userData.role) {\n            userRole = userData.role;\n          }\n          resolve();\n        });\n      });\n      addDataBase(userId, userEmail, userName, userRole);\n      switch (userRole) {\n        case 'user':\n          navigate(\"/\");\n          break;\n        case 'doctor':\n          navigate(\"/doctor\");\n          break;\n        default:\n          navigate(\"/\");\n      }\n      toast.success(\"Login successfully. Wish you enjoy our best experiment\");\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Password not match, please try again!\");\n      return; // Prevent form submission\n    }\n    const expression = /^[^@]+@\\w+(\\.\\w+)+\\w$/;\n    if (!expression.test(email)) {\n      toast.error(\"Email is invalid. Please enter a valid email address.\");\n      return; // Prevent form submission\n    }\n    const signInMethods = await fetchSignInMethodsForEmail(auth, email);\n    if (signInMethods.length > 0) {\n      setIsRegistering(false); // Allow user to edit registration info\n      toast.error(\"This email is used by another user, please try again!\");\n      return; // Prevent form submission\n    }\n    if (!isRegistering) {\n      setIsRegistering(true);\n      try {\n        const userCredential = await doCreateUserWithEmailAndPassword(email, password);\n        const user = userCredential.user;\n        const userId = userCredential.user.uid; // Use userCredential.user.uid for unique identifier\n        await updateProfile(user, {\n          displayName: username,\n          role: \"user\"\n        });\n        addDataBase(userId, email, username, \"user\"); // Omit password from user data\n        navigate(\"/\"); // Redirect to home page\n        toast.success(\"Login successfully. Wish you enjoy our best experiment\");\n      } catch (error) {\n        // Handle Firebase errors (e.g., weak password)\n        toast.error(error.message);\n      } finally {\n        setIsRegistering(false); // Allow user to edit registration info\n      }\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    } else if (name === \"username\") {\n      setUsername(value);\n    } else if (name === \"confirmPassword\") {\n      setconfirmPassword(value);\n    }\n  };\n  const handleEmailLogin = async event => {\n    event.preventDefault(); // Prevent default form submission behavior\n    setError(null); // Clear any previous errors\n\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const userEmail = userCredential.user.email;\n      setUserEmail(userEmail);\n      localStorage.setItem(\"email\", userEmail); // Consider secure storage in production\n      navigate(\"/\"); // Chuyển hướng người dùng đến trang chủ\n      toast.success(\"Login successfully. Wish you enjoy our best experiment\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleClickButtonReg = async () => {\n    const container = document.getElementById(\"container\");\n    container.classList.add(\"active\");\n  };\n  const handleClickButtonLog = async () => {\n    const container = document.getElementById(\"container\");\n    container.classList.remove(\"active\");\n  };\n  useEffect(() => {\n    const storedEmail = localStorage.getItem(\"email\");\n    setUserEmail(storedEmail);\n  }, []); // Empty dependency array ensures it runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!userEmail &&\n    /*#__PURE__*/\n    // Only show login options if not logged in\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        id: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container sign-up\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"social-icons\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleGoogleLogin,\n                children: \"Login with Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"or use your email for registeration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"username\",\n              type: \"username\",\n              autoComplete: \"off\",\n              required: true,\n              value: username,\n              placeholder: \"Input your username\",\n              onChange: e => {\n                setUsername(e.target.value);\n              },\n              className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              autoComplete: \"off\",\n              required: true,\n              value: email,\n              placeholder: \"Input your email\",\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"password\",\n              disabled: isRegistering,\n              placeholder: \"Input your password\",\n              type: \"password\",\n              autoComplete: \"off\",\n              required: true,\n              value: password,\n              onChange: e => {\n                setPassword(e.target.value);\n              },\n              className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-indigo-600 shadow-sm rounded-lg transition duration-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"text-sm text-gray-600 font-bold\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                disabled: isRegistering,\n                type: \"password\",\n                placeholder: \"Confirm your password\",\n                autoComplete: \"off\",\n                required: true,\n                value: confirmPassword,\n                onChange: e => {\n                  setconfirmPassword(e.target.value);\n                },\n                className: \"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-indigo-600 shadow-sm rounded-lg transition duration-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isRegistering,\n              className: `w-full px-4 py-2 text-white font-medium rounded-lg ${isRegistering ? \"bg-gray-300 cursor-not-allowed\" : \"bg-indigo-600 hover:bg-indigo-700 hover:shadow-xl transition duration-300\"}`,\n              children: isRegistering ? \"Signing Up...\" : \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-container sign-in\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEmailLogin,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"social-icons\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleGoogleLogin,\n                children: \"Login with Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"or use your email password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"Input your email\",\n              value: email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Input your password\",\n              id: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Forget Your Password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"toggle-panel toggle-left\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Welcome Back!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Enter your personal details to use all of site features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hidden\",\n                id: \"login\",\n                onClick: handleClickButtonLog,\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"toggle-panel toggle-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Hello, Friend!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Register with your personal details to use all of site features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"hidden\",\n                id: \"register\",\n                onClick: handleClickButtonReg,\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), userEmail && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(SignIn, \"dBEnFUya1YYJomSJNDXTu33W4yc=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useEffect","auth","provider","doCreateUserWithEmailAndPassword","signInWithPopup","signInWithEmailAndPassword","Home","useNavigate","fetchSignInMethodsForEmail","updateProfile","ToastContainer","toast","getDatabase","ref","set","onValue","jsxDEV","_jsxDEV","Fragment","_Fragment","SignIn","_s","email","setEmail","username","setUsername","password","setPassword","userEmail","setUserEmail","error","setError","confirmPassword","setconfirmPassword","isRegistering","setIsRegistering","navigate","addDataBase","userId","name","role","db","alert","handleGoogleLogin","data","user","userName","displayName","uid","localStorage","setItem","userRef","userRole","Promise","resolve","snapshot","userData","val","success","message","onSubmit","e","preventDefault","expression","test","signInMethods","length","userCredential","handleChange","event","value","target","handleEmailLogin","handleClickButtonReg","container","document","getElementById","classList","add","handleClickButtonLog","remove","storedEmail","getItem","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","autoComplete","required","placeholder","onChange","disabled","class","href","_c","$RefreshReg$"],"sources":["D:/workspace/pet center/src/Components/googleSignIn/signIn.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { auth, provider } from \"../firebase/firebase\"; // Assuming config file with Firebase settings\r\nimport { doCreateUserWithEmailAndPassword } from \"../firebase/auth\";\r\nimport { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport Home from \"./Home\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchSignInMethodsForEmail, updateProfile } from \"firebase/auth\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getDatabase, ref, set, onValue } from \"firebase/database\";\r\n\r\nfunction SignIn() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(null); // Track logged-in user email\r\n  const [error, setError] = useState(null); // Store error messages\r\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  function addDataBase(userId, email, name, role) {\r\n    const db = getDatabase();\r\n    set(ref(db, 'users/' + userId), {\r\n      email: email,\r\n      username: name,\r\n      role: role\r\n    }, function (error) {\r\n      if (error) {\r\n        alert('Lỗi');\r\n      } else {\r\n        alert('Thành Công !!!');\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleGoogleLogin = async () => {\r\n    try {\r\n      const data = await signInWithPopup(auth, provider); // Replace 'provider' with your Google Sign-in provider\r\n      const userEmail = data.user.email;\r\n      const userName = data.user.displayName;\r\n      const userId = data.user.uid;\r\n      setUsername(userName);\r\n      setUserEmail(userEmail);\r\n      localStorage.setItem(\"email\", userEmail); // Consider secure storage in production\r\n\r\n      const db = getDatabase();\r\n      const userRef = ref(db, 'users/' + userId);\r\n      let userRole = 'user';\r\n\r\n      // Wait for data from Firebase\r\n      await new Promise((resolve) => {\r\n        onValue(userRef, (snapshot) => {\r\n          const userData = snapshot.val();\r\n          if (userData && userData.role) {\r\n            userRole = userData.role;\r\n          }\r\n          resolve();\r\n        });\r\n      });\r\n\r\n      addDataBase(userId, userEmail, userName, userRole);\r\n\r\n      switch (userRole) {\r\n        case 'user':\r\n          navigate(\"/\");\r\n          break;\r\n        case 'doctor':\r\n          navigate(\"/doctor\");\r\n          break;\r\n        default:\r\n          navigate(\"/\");\r\n      }\r\n      toast.success(\"Login successfully. Wish you enjoy our best experiment\");\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n};\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Password not match, please try again!\");\r\n      return; // Prevent form submission\r\n    }\r\n\r\n    const expression = /^[^@]+@\\w+(\\.\\w+)+\\w$/;\r\n    if (!expression.test(email)) {\r\n      toast.error(\"Email is invalid. Please enter a valid email address.\");\r\n      return; // Prevent form submission\r\n    }\r\n\r\n    const signInMethods = await fetchSignInMethodsForEmail(auth, email);\r\n    if (signInMethods.length > 0) {\r\n      setIsRegistering(false); // Allow user to edit registration info\r\n      toast.error(\r\n        \"This email is used by another user, please try again!\"\r\n      );\r\n      return; // Prevent form submission\r\n    }\r\n\r\n    if (!isRegistering) {\r\n      setIsRegistering(true);\r\n      try {\r\n        const userCredential = await doCreateUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n        const user = userCredential.user;\r\n        const userId = userCredential.user.uid; // Use userCredential.user.uid for unique identifier\r\n        await updateProfile(user, {\r\n          displayName: username,\r\n          role: \"user\"\r\n        });\r\n        addDataBase(userId, email, username, \"user\"); // Omit password from user data\r\n        navigate(\"/\"); // Redirect to home page\r\n        toast.success(\"Login successfully. Wish you enjoy our best experiment\");\r\n      } catch (error) {\r\n        // Handle Firebase errors (e.g., weak password)\r\n        toast.error(error.message);\r\n      } finally {\r\n        setIsRegistering(false); // Allow user to edit registration info\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"username\") {\r\n      setUsername(value);\r\n    } else if (name === \"confirmPassword\") {\r\n      setconfirmPassword(value);\r\n    }\r\n  };\r\n\r\n  const handleEmailLogin = async (event) => {\r\n    event.preventDefault(); // Prevent default form submission behavior\r\n    setError(null); // Clear any previous errors\r\n\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password,\r\n      );\r\n      const userEmail = userCredential.user.email;\r\n      setUserEmail(userEmail);\r\n      localStorage.setItem(\"email\", userEmail); // Consider secure storage in production\r\n      navigate(\"/\"); // Chuyển hướng người dùng đến trang chủ\r\n      toast.success(\"Login successfully. Wish you enjoy our best experiment\")\r\n\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleClickButtonReg = async () => {\r\n    const container = document.getElementById(\"container\");\r\n    container.classList.add(\"active\");\r\n  };\r\n  const handleClickButtonLog = async () => {\r\n    const container = document.getElementById(\"container\");\r\n    container.classList.remove(\"active\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedEmail = localStorage.getItem(\"email\");\r\n    setUserEmail(storedEmail);\r\n  }, []); // Empty dependency array ensures it runs only once\r\n\r\n  return (\r\n    <div>\r\n      {!userEmail && ( // Only show login options if not logged in\r\n        <>\r\n          <div className=\"container\" id=\"container\">\r\n            <div className=\"form-container sign-up\">\r\n              <form onSubmit={onSubmit}>\r\n                <h1>Create Account</h1>\r\n                <div className=\"social-icons\">\r\n                  <button type=\"button\" onClick={handleGoogleLogin}>Login with Google</button>\r\n                </div>\r\n                <span>or use your email for registeration</span>\r\n                <input\r\n                id=\"username\"\r\n                  type=\"username\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  value={username}\r\n                  placeholder =\"Input your username\"\r\n                  onChange={(e) => {\r\n                    setUsername(e.target.value);\r\n                  }}\r\n                  className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n                />\r\n                <input\r\n                id=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  value={email}\r\n                  placeholder =\"Input your email\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                  className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n                />\r\n                <input\r\n                id=\"password\"\r\n                  disabled={isRegistering}\r\n                  placeholder =\"Input your password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                  className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n                />\r\n                <div>\r\n                  <label className=\"text-sm text-gray-600 font-bold\">\r\n                    Confirm Password\r\n                  </label>\r\n                  <input\r\n                    disabled={isRegistering}\r\n                    type=\"password\"\r\n                  placeholder =\"Confirm your password\"\r\n                    autoComplete=\"off\"\r\n                    required\r\n                    value={confirmPassword}\r\n                    onChange={(e) => {\r\n                      setconfirmPassword(e.target.value);\r\n                    }}\r\n                    className=\"w-full mt-2 px-3 py-2 text-gray-500 bg-transparent outline-none border focus:border-indigo-600 shadow-sm rounded-lg transition duration-300\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isRegistering}\r\n                  className={`w-full px-4 py-2 text-white font-medium rounded-lg ${\r\n                    isRegistering\r\n                      ? \"bg-gray-300 cursor-not-allowed\"\r\n                      : \"bg-indigo-600 hover:bg-indigo-700 hover:shadow-xl transition duration-300\"\r\n                  }`}\r\n                >\r\n                  {isRegistering ? \"Signing Up...\" : \"Sign Up\"}\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div class=\"form-container sign-in\">\r\n              <form onSubmit={handleEmailLogin}>\r\n                <h1>Sign In</h1>\r\n                <div className=\"social-icons\">\r\n                  <button type=\"button\" onClick={handleGoogleLogin}>Login with Google</button>\r\n                </div>\r\n                <span>or use your email password</span>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder =\"Input your email\"\r\n                  value={email}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder =\"Input your password\"\r\n\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <a href=\"#\">Forget Your Password?</a>\r\n                <button>Sign In</button>\r\n              </form>\r\n            </div>\r\n            <div className=\"toggle-container\">\r\n              <div className=\"toggle\">\r\n                <div className=\"toggle-panel toggle-left\">\r\n                  <h1>Welcome Back!</h1>\r\n                  <p>Enter your personal details to use all of site features</p>\r\n                  <button\r\n                    className=\"hidden\"\r\n                    id=\"login\"\r\n                    onClick={handleClickButtonLog}\r\n                  >\r\n                    Sign In\r\n                  </button>\r\n                </div>\r\n                <div className=\"toggle-panel toggle-right\">\r\n                  <h1>Hello, Friend!</h1>\r\n                  <p>\r\n                    Register with your personal details to use all of site\r\n                    features\r\n                  </p>\r\n                  <button\r\n                    className=\"hidden\"\r\n                    id=\"register\"\r\n                    onClick={handleClickButtonReg}\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {userEmail && <Home />} {/* Render Home if user is logged in */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}